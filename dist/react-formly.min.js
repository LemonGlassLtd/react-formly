!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory(require("React")):"function"==typeof define&&define.amd?define(["React"],factory):"object"==typeof exports?exports.ReactFormly=factory(require("React")):root.ReactFormly=factory(root.React)}(this,function(__WEBPACK_EXTERNAL_MODULE_2__){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports.Formly=__webpack_require__(4),module.exports.FieldMixin=__webpack_require__(3),module.exports.FormlyConfig=__webpack_require__(1)},function(module){"use strict";function addFieldType(name,field){Array.isArray(name)?name.forEach(function(fieldType){addFieldType(fieldType)}):"object"==typeof name&&(field=name.field,name=name.name),fieldTypeMap[name]=field}function getFieldTypes(){return fieldTypeMap}function clearTypes(){var oldTypes=fieldTypeMap;return fieldTypeMap={},oldTypes}var fieldTypeMap={};module.exports={fields:{addType:addFieldType,getTypes:getFieldTypes,clearTypes:clearTypes}}},function(module){module.exports=__WEBPACK_EXTERNAL_MODULE_2__},function(module,exports,__webpack_require__){"use strict";var FieldMixin=(__webpack_require__(2),{onChange:function(event){var value=event.target.value;this.transformUpdate&&(value=this.transformUpdate(value)),this.props.onValueUpdate(this.props.config.key,value)}});module.exports=FieldMixin},function(module,exports,__webpack_require__){"use strict";function generateFieldTag(field,model,onValueUpdate){var fieldTag=fieldTypes[field.type];if(!fieldTag)throw new Error('Formly: "'+field.type+"\" has not been added to FormlyConfig's field types.");var hide=isOrInvoke(field,"hidden",model);return hide||null===hide?fieldTag({model:model,config:field,onValueUpdate:onValueUpdate,key:field.key}):null}function isOrInvoke(field,property,model){return field.hasOwnProperty(property)?"function"==typeof field[property]?field[property](model,field):!!field[property]:null}var React=__webpack_require__(2),fieldTypes=__webpack_require__(1).fields.getTypes(),Formly=React.createClass({displayName:"Formly",onValueUpdate:function(fieldKey,value){this.formly.model[fieldKey]=value,this.props.onFormlyUpdate(this.formly.model)},componentWillMount:function(){this.formly={config:this.props.config,model:this.props.model}},render:function(){var model=this.formly.model,onValueUpdate=this.onValueUpdate,fields=this.formly.config.fields.map(function(field){return generateFieldTag(field,model,onValueUpdate)});return React.DOM.form({name:"{this.formly.config.name}"},fields)}});module.exports=Formly}])});
//# sourceMappingURL=dist/react-formly.min.js.map