!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("React")):"function"==typeof define&&define.amd?define(["React"],t):"object"==typeof exports?exports.ReactFormly=t(require("React")):e.ReactFormly=t(e.React)}(this,function(e){return function(e){function t(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return e[r].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){e.exports.Formly=o(2),e.exports.FieldMixin=o(3),e.exports.FormlyConfig=o(1)},function(e){"use strict";function t(e,o){Array.isArray(e)?e.forEach(function(e){t(e)}):"object"==typeof e&&(o=e.field,e=e.name),n[e]=o}function o(){return n}function r(){var e=n;return n={},e}var n={};e.exports={fields:{addType:t,getTypes:o,clearTypes:r}}},function(e,t,o){"use strict";function r(e,t,o){var r=e.component?e.component:s.fields.getTypes()[e.type];if(!r)throw new Error('Formly: "'+e.type+"\" has not been added to FormlyConfig's field types.");var i=n(e,"hidden",t);return i&&null!==i?null:r({model:t,config:e,onValueUpdate:o,key:e.key})}function n(e,t,o){return e.hasOwnProperty(t)?"function"==typeof e[t]?e[t](o,e):!!e[t]:null}var i=o(4),s=o(1),c=i.createClass({displayName:"Formly",propTypes:{onFormlyUpdate:i.PropTypes.func.isRequired,config:i.PropTypes.object.isRequired,model:i.PropTypes.object},onValueUpdate:function(e,t){this.formly.model[e]=t,this.props.onFormlyUpdate(this.formly.model)},componentWillMount:function(){this.formly={config:this.props.config,model:this.props.model||{}}},render:function(){var e=this.formly.model,t=this.onValueUpdate,o=this.formly.config.fields.map(function(o){return r(o,e,t)});return i.DOM.form({className:"formly",role:"form",name:this.formly.config.name},o)}});e.exports=c},function(e){"use strict";function t(e){switch(e.type){case"checkbox":case"radio":return e.checked;case"select":return e.selected;default:return e.value}}var o={onChange:function(e){var o=t(e.target);this.updateValue(o)},updateValue:function(e){this.transformUpdate&&(e=this.transformUpdate(e)),this.props.onValueUpdate(this.props.config.key,e)}};e.exports=o},function(t){t.exports=e}])});
//# sourceMappingURL=react-formly.min.js.map